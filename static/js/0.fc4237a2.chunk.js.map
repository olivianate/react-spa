{"version":3,"sources":["../static/js/0.fc4237a2.chunk.js","modules/page.echarts.manage/components/BarChart.js","../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/util/model.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/config.js","../node_modules/echarts/lib/util/number.js","../node_modules/zrender/lib/core/vector.js","../node_modules/zrender/lib/core/env.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/echarts/lib/util/format.js","../node_modules/echarts/lib/model/Model.js","../node_modules/echarts/lib/model/Component.js","../node_modules/echarts/lib/util/layout.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/zrender/lib/contain/text.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/zrender/lib/core/curve.js","../node_modules/echarts/lib/data/helper/dataProvider.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/zrender/lib/tool/color.js","../node_modules/zrender/lib/core/event.js","../node_modules/echarts/lib/data/Source.js","../node_modules/echarts/lib/data/helper/sourceType.js","../node_modules/zrender/lib/container/Group.js","../node_modules/zrender/lib/config.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/echarts/lib/util/component.js","../node_modules/echarts/lib/data/helper/sourceHelper.js","../node_modules/echarts/lib/data/helper/dataStackHelper.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/CoordinateSystem.js","../node_modules/echarts/lib/stream/task.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/data/helper/dimensionHelper.js","../node_modules/echarts/lib/data/helper/createDimensions.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/zrender/lib/zrender.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/graphic/helper/fixShadow.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/echarts/lib/model/Global.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/echarts/lib/model/referHelper.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/model/Series.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/chart/helper/createRenderPlanner.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/echarts/lib/data/OrdinalMeta.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/layout/barGrid.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/echarts/lib/coord/cartesian/Grid.js","../node_modules/echarts/lib/coord/cartesian/AxisModel.js","../node_modules/echarts/lib/component/gridSimple.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/zrender/lib/graphic/IncrementalDisplayable.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/echarts/lib/processor/dataStack.js","../node_modules/echarts/lib/model/mixin/dataFormat.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/visual/aria.js","../node_modules/echarts/lib/lang.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/stream/Scheduler.js","../node_modules/echarts/lib/theme/light.js","../node_modules/echarts/lib/theme/dark.js","../node_modules/echarts/lib/component/dataset.js","../node_modules/echarts/lib/export.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/coord/geo/parseGeoJson.js","../node_modules/echarts/lib/coord/geo/Region.js","../node_modules/zrender/lib/contain/polygon.js","../node_modules/echarts/lib/coord/axisTickLabelBuilder.js","../node_modules/echarts/lib/chart/bar.js","../node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/echarts/lib/coord/cartesian/Cartesian.js","../node_modules/echarts/lib/coord/cartesian/Axis2D.js","../node_modules/echarts/lib/coord/cartesian/GridModel.js","../node_modules/echarts/lib/coord/axisModelCreator.js","../node_modules/echarts/lib/coord/axisDefault.js","../node_modules/echarts/lib/chart/bar/BarSeries.js","../node_modules/echarts/lib/chart/bar/BaseBarSeries.js","../node_modules/echarts/lib/chart/bar/BarView.js","../node_modules/echarts/lib/chart/bar/helper.js","../node_modules/echarts/lib/chart/helper/labelHelper.js","../node_modules/echarts/lib/chart/bar/barItemStyle.js","../node_modules/echarts/lib/component/axis.js","../node_modules/echarts/lib/component/axis/CartesianAxisView.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/helper/createListSimply.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/component/title.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/grid.js"],"names":["webpackJsonp","1096","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_bar__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_chart_pie__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_title__","__WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_legend__","__WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_grid__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","BarChart","_Component","this","_this","getPrototypeOf","initChart","myChart","a","init","chartbox","option","setOption","_this2","_props","width","height","createElement","ref","style","1097","exports","$override","name","fn","_ctx","methods","clone","source","result","typeStr","objToString","isPrimitive","len","TYPED_ARRAY","Ctor","from","BUILTIN_OBJECT","isDom","hasOwnProperty","merge","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","createCanvas","indexOf","array","inherits","clazz","baseClazz","F","clazzPrototype","prop","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","isFunction","isString","type","isTypedArray","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","trim","str","replace","setAsPrimitive","primitiveKey","HashMap","visit","isArr","thisMap","set","createHashMap","concatArray","b","newArray","offset","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","Array","document","get","removeKey","1098","normalizeToArray","defaultEmphasis","opt","subOpts","emphasis","subOptName","getDataItemValue","dataItem","Date","isDataItemOption","mappingToExists","exists","newCptOptions","zrUtil","index","exist","cptOption","id","isIdInner","makeIdAndName","mapResult","idMap","item","existCpt","keyInfo","DUMMY_COMPONENT_NAME_PREFIX","idNum","isNameSpecified","componentModel","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","dataIndex","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","payload","dataIndexInside","indexOfRawIndex","indexOfName","makeInner","innerUniqueIndex","Math","random","toFixed","hostObj","parseFinder","ecModel","finder","defaultMainType","has","parsedKey","match","mainType","queryType","toLowerCase","includeMainTypes","queryParam","models","queryComponents","setAttribute","dom","getAttribute","TEXT_STYLE_OPTIONS","1099","createRegisterEventWithLowercaseName","method","eventName","handler","Eventful","MessageCenter","ECharts","theme","opts","prioritySortFunc","__prio","themeStorage","group","_dom","zr","_zr","zrender","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","api","_api","createExtensionAPI","timsort","visualFuncs","dataProcessorFuncs","_scheduler","Scheduler","_messageCenter","_initEvents","resize","_pendingActions","animation","on","_onframe","bindRenderedEvent","doConvertPixel","methodName","_model","coordSysList","getCoordinateSystems","modelUtil","coordSys","prepare","ecIns","scheduler","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","subType","callView","view","__alive","__model","query","excludeSeriesId","eachComponent","model","__viewId","updateStreamModes","chartsMap","eachSeries","seriesModel","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","isFinished","unfinished","doPrepare","viewId","viewMap","classType","isComponent","ComponentView","getClass","ChartView","viewList","add","__id","__ecComponentInfo","componentIndex","componentType","renderTask","dispose","remove","splice","clearColorPalette","render","renderComponents","chart","renderSeries","dirtyList","componentView","updateZ","dirtyMap","chartView","updatePayload","uid","dirty","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","aria","performPostUpdateFuncs","postUpdateFuncs","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","blendMode","blend","setStyle","eachPendingDisplayable","displayable","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","parent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processor","normalizeRegister","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","PRIORITY_VISUAL_LAYOUT","registerVisual","visualTask","PRIORITY_VISUAL_CHART","targetList","defaultPriority","visualType","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","SeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","_config","__DEV__","colorTool","GlobalModel","OptionManager","dataStack","graphic","_throttle","seriesColor","loadingDefault","lightTheme","darkTheme","dependencies","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","off","one","echartsProto","_disposed","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getZr","notMerge","lazyUpdate","optionManager","setTheme","console","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","getSvgDataUrl","svgSupported","list","getDisplayList","stopAnimation","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","component","ignore","url","getType","toDataURL","getConnectedDataURL","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","coordinateSystem","containPoint","getVisual","getData","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","prepareAndUpdate","restoreData","setBackgroundColor","colorArr","stringify","updateTransform","componentDirtyList","seriesDirtyMap","setDirty","updateView","markUpdateMethod","updateVisual","updateLayout","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","browser","weChat","appendData","params","seriesIndex","getSeriesByIndex","MOUSE_EVENT_NAMES","eveName","e","dataModel","getDataParams","dataType","eventData","clear","series","disconnect","dataTool","version","___ec_export","1100","extendShape","Path","extendPath","pathData","pathTool","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","ZImage","onload","aspect","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","round","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","baseText","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","text","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textPosition","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","isUpdate","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","updateProps","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","transform","invert","Transformable","vector","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","IncrementalDisplayable","mergePath","1101","global","dev","1102","_trim","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","NaN","precision","returnStr","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","floor","sizeQuantity","isFinite","getPercentWithPrecision","valueList","idx","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","parseDate","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","MAX_SAFE_INTEGER","1103","out","ArrayCtor","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","1104","wx","getSystemInfoSync","os","wxa","touchEventsSupported","worker","navigator","ua","firefox","ie","edge","SVGRect","pointerEventsSupported","userAgent","_default","1105","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","colorStops","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","1106","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","1107","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","replaceReg","c","replaceMap","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","k","formatTplSimple","getTooltipMarker","extraCssText","pad","substr","formatTime","isUTC","date","numberUtil","utc","M","h","S","capitalFirst","textContain","&","<",">","\"","'","varName","truncateText","getTextRect","1108","Model","doGet","pathArr","getParent","getParentMethod","inner","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","1109","getDependencies","deps","getClassesByMainType","Clazz","unshift","componentUtil","enableClassManagement","boxLayoutMixin","defaultOption","dependentModels","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","fields","optList","Class","getReferringComponents","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","1110","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","formatUtil","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","HV_NAMES","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","_number","box","vbox","hbox","1111","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","proto","ExtendedClass","superCall","superApply","Clz","classAttr","classBase","isInstance","entity","options","makeContainer","container","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","o","hasClass","getAllClassMainTypes","types","hasSubTypes","originalExtend","1112","font","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","_util","1113","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","1114","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","A","B","C","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","1115","DefaultDataProvider","dimSize","Source","seriesDataToSource","_source","_data","sourceFormat","SOURCE_FORMAT_TYPED_ARRAY","_offset","_dimSize","providerMethods","SOURCE_FORMAT_ARRAY_ROWS","seriesLayoutBy","countSimply","getItemSimply","appendDataSimply","newData","getRawValueSimply","dimIndex","dimName","getDimValueSimply","converDataValue","_dimensionInfos","dimInfo","dimType","ordinalMeta","parseAndCollect","retrieveRawValue","dim","getRawDataItem","getProvider","getSource","getDimensionInfo","rawValueGetters","retrieveRawAttr","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_OBJECT_ROWS","_sourceType","providerProto","pure","persistent","arrayRows_column","startIndex","getItem","arrayRows_row","row","objectRows","keyedColumns","dimensionsDefine","col","dims","newCol","oldCol","original","typedArray","clean","arrayRows","defaultDimValueGetters","_rawData","hasItemOption","1116","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","getCategories","setBlank","getOrdinalMeta","categories","getNeedCrossZero","isBaseAxisAndHasBarSeries","barSeriesModels","prepareLayoutBarSeries","getBaseAxis","axis","barWidthAndOffset","makeColumnLayout","adjustedScale","adjustScaleForOverflow","axisExtent","axisLength","barsOnCurrentAxis","retrieveColumnLayout","undefined","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","OrdinalScale","IntervalScale","Scale","ifAxisCrossZero","makeLabelFormatter","labelFormatter","getLabelModel","categoryTickStart","tickValue","getAxisRawValue","tick","getLabel","estimateLabelUnionRect","axisModel","isBlank","realNumberScaleTicks","tickCount","isCategory","categoryScaleExtent","getTicks","axisLabelModel","step","ceil","label","unrotatedSingleRect","singleRect","rotateTextRect","textRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","_barGrid","1117","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","1118","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","1119","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","stop","preventDefault","stopPropagation","cancelBubble","returnValue","1120","fromDataset","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SERIES_LAYOUT_BY_COLUMN","encodeDefine","dimensionsDetectCount","1121","SERIES_LAYOUT_BY_ROW","1122","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","1123","debugMode","1124","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","progressive","incremental","inplace","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","1125","excludes","includes","propName","1126","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","1127","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","stack","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","1128","detectSourceFormat","datasetModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","sourceHeader","getDatasetModel","datasetOption","completeResult","completeBySourceData","makeDefaultEncode","normalizeDimensionsDefine","findPotentialName","arrayRowsTravelFirst","objectRowsCollectDimensions","colArr","potentialNameDimIndex","nameMap","displayName","maxLoop","firstIndex","coordSysDefine","getCoordSysDefineBySeries","encodeItemName","encodeSeriesName","seriesType","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","coordDim","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","doGuessOrdinal","nameDimIndex","itemName","seriesName","datasetIndex","guessOrdinal","detectValue","sample","_referHelper","1129","enableDataStack","dimensionInfoList","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","byIndex","stackedCoordDimension","mayStack","dimensionInfo","isExtraCoord","createInvertedIndices","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","coordDimIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","isDimensionStacked","stackedDim","getCalculationInfo","getStackedDimension","targetDim","1130","setting","_setting","_extent","_interval","clazzUtil","getSetting","unionExtent","unionExtentFromData","getApproximateExtent","start","end","thisExtent","_isBlank","1131","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","show","tooltipAxisPointerLabelShow","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","reverse","getAxisPointerModel","1132","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","1133","newImageOrSrc","cachedImgObj","globalImageCache","createOrUpdateImage","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","src","1134","Gradient","addColorStop","1135","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","1136","createTask","define","Task","_reset","reset","_plan","_count","_onDirty","onDirty","_dirty","doProgress","taskIns","progress","modBy","modDataCount","iterator","_callingProgress","skip","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","forceFirstProgress","_progress","_modBy","_modDataCount","downstream","_downstream","taskProto","performArgs","normalizeModBy","upTask","_upstream","outputData","__pipeline","currentTask","planResult","lastModBy","lastModDataCount","outputDueEnd","sequentialNext","current","modNext","winCount","it","sStep","sCount","pipe","downTask","getUpstream","getDownstream","setOutputEnd","1137","delay","debounce","lastExec","getTime","timer","scope","currCall","diff","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","1138","getIndicesCtor","_rawCount","CtorUint32Array","CtorUint16Array","cloneChunk","originalChunk","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","CLONE_PROPERTIES","_calculationInfo","prepareInvertedIndex","invertedIndicesMap","_invertedIndicesMap","invertedIndices","getRawValueFromStore","rawIndex","chunkSize","_chunkSize","chunkIndex","chunkOffset","chunk","_storage","getRawIndexWithoutIndices","getRawIndexWithIndices","_indices","getId","_idList","_idDimIdx","ID_PREFIX","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","List","hostModel","originalStorage","cloneDimStore","_rawExtent","getInitialExtent","originalDimStore","newDimStore","DataDiffer","_dataProvider","_dimensionHelper","summarizeDimensions","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","Uint32Array","Uint16Array","dimensionInfos","dimensionNames","dimensionName","otherDims","_nameList","_optionModels","_visual","_layout","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkCount","_approximateExtent","_dimensionsSummary","listProto","getDimension","getDimensionsOnCoord","dataDimsOnCoord","mapDimension","dimensionsSummary","encodeFirstDimNotExtra","initData","nameList","dimValueGetter","_nameRepeatCount","defaultDimValueGetter","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","dimLen","dimensionInfoMap","idList","rawExtent","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","dimStorage","dimRawExtent","nameDim","nameDimChunk","getIndices","newIndices","indices","thisCount","buffer","getRawIndex","getByRawIndex","rawIdx","dimStore","_getFast","getValues","getDataExtent","dimData","initialExtent","dimExtent","currEnd","useRaw","setApproximateExtent","setCalculationInfo","getSum","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","getName","rawDataIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","contextCompat","filterSelf","dim0","keep","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","getItemModel","otherList","thisList","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","1139","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimItem","coordDimArr","mayLabelDimType","defaultTooltip","OTHER_DIMENSIONS","otherDim","otherDimArr","dimArr","encodeLabel","encodeTooltip","tooltip","getDimensionTypeByAxis","1140","completeDimensions","coordDimensions","dimsDef","encodeDef","dimCount","dimensionsCount","generateCoord","generateCoordCount","1141","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","1142","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","createSymbol","keepAspect","symbolPath","SymbolClz","setColor","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","proxySymbol","1143","ZRender","guid","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","config","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","cursorStyle","findHover","eventHandler","1144","idStart","1145","Animatable","clipPath","drift","decomposeTransform","beforeUpdate","afterUpdate","hide","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","1146","mIdentity","origin","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","1147","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","1148","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1149","1150","createLinearGradient","createRadialGradient","fixShadow","STYLE_COMMON_PROPS","opacity","shadowBlur","shadowOffsetX","shadowOffsetY","transformText","textOrigin","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","1151","SHADOW_PROPS","1152","repeat","createPattern","1153","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1154","_image","sWidth","sHeight","drawImage","1155","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","1156","r1","r2","r3","r4","total","1157","isNotTargetSeries","seiresIndex","mergeTheme","notMergeColorLayer","colorLayer","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","_seriesIndicesMap","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMixin","_sourceHelper","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","getSeriesCount","rawSeriesIndex","eachRawSeries","eachSeriesByType","eachRawSeriesByType","isSeriesFiltered","getCurrentSeriesIndices","filterSeries","componentTypes","1158","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","PI2","extremity","1159","normalizeRadian","1160","windingLine","dir","x_","1161","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","1162","getNearestColorPalette","requestColorNum","paletteNum","colorIdx","colorNameMap","getColorFromPalette","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","1163","coordSysName","axisMap","fetch","fetchers","cartesian2d","xAxisModel","yAxisModel","singleAxis","singleAxisModel","polar","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","geo","parallel","parallelModel","parallelAxisIndex","axisIndex","axisDim","1164","chartInstance","echartsAPIList","1165","autoSeriesName","getSeriesAutoName","getRawData","dataDims","nameArr","dataTaskCount","dataTaskReset","dataTaskProgress","wrapData","onDataSelfChange","task","getCurrentTask","pipeline","getPipeline","agentStubMap","_format","dataFormatMixin","_task","legendDataProvider","visualColorAccessPath","dataTask","getInitialData","dataBeforeProcessed","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","modifyOutputEnd","formatTooltip","multipleSeries","formatSingleValue","tooltipDims","tooltipDimLen","getRawValue","isValueArr","formattedValue","setEachItem","dimHead","valStr","vertially","colorEl","animationEnabled","coordDimToDataDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","getTooltipPosition","pipeTask","preventIncremental","pipelineContext","1166","Component","componentProto","1167","Chart","renderTaskPlan","renderTaskReset","elSetState","state","toggleHighlight","renderPlanner","progressiveRender","progressMethodMap","createRenderPlanner","highlight","downplay","incrementalPrepareRender","incrementalRender","chartProto","1168","originalLarge","large","originalProgressive","1169","createListFromArray","coordSysDimDefs","registeredCoordSys","hasNameEncode","dimInfoList","createDimensions","categoryAxisModel","stackCalculationInfo","isNeedCompleteOrdinalData","itemOpt","sampleItem","firstDataNotNull","_dataStackHelper","1170","sysDims","applyDim","coordDimNameMap","dataDimNameMap","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","sysDimItemDimsDefItem","fromZero","extra","genName","optDimCount","1171","OrdinalMeta","_needCollect","needCollect","_deduplication","deduplication","getOrCreateMap","createByAxisModel","dedplication","getOrdinal","category","1172","fixExtent","ticks","1173","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","baseAxis","bandWidth","getBandWidth","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","isOnCartesian","isInLargeMode","barSeries","seriesInfoList","cartesian","barWidth","barMaxWidth","barGap","barCategoryGap","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxis","getOtherAxis","barMinHeight","valueDim","baseDim","stacked","isValueAxisH","isHorizontal","valueAxisStart","getValueAxisStart","baseValue","sign","baseCoord","dataToPoint","getAxesOnZeroOf","toGlobalCoord","dataToCoord","getGlobalExtent","LargeArr","largeLayout","largePoints","valuePair","valueDimIdx","valueAxisHorizontal","1174","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","1175","fixExtentWithBands","nTick","fixOnBandTicksCoords","ticksCoords","tickCategoryInterval","alignWithLabel","inverse","ticksLen","onBand","last","ticksItem","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","Axis","containData","coordToData","pointToData","getTicksCoords","tickModel","getTickModel","getViewLabels","labels","getRotate","1176","isAxisUsedInTheGrid","gridModel","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","otherAxis","onZero","onZeroAxisIndex","canOnZeroToAxis","updateAxisTransform","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","_axisHelper","Cartesian2D","Axis2D","gridProto","getRect","_updateScale","xAxis","yAxis","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","coordsList","grid","createAxisCreator","axisPosition","axisPositionUsed","axesCount","addAxis","axesModels","grids","1177","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","extraOption","1178","echarts","getItemStyle","1179","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","lineStyleModel","tickLen","pt1","pt2","_transform","tickCoord","tickDirection","tickEl","getLineStyle","buildAxisLabel","axisLabelShow","labelMargin","labelRotation","innerTextLayout","labelDirection","rawCategoryData","triggerEvent","labelItem","formattedLabel","rawLabel","itemLabelModel","textColor","getTextColor","pos","labelOffset","textEl","targetType","_dumbGroup","_symbol","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","symbol","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","content","formatter","axisRotation","1180","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","1181","otherAxisOnZeroOf","rawAxisPosition","rectBound","axisOffset","posBound","onZeroCoord","dirMap","labelInside","1182","axisTrigger","link","1183","1184","records","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","1185","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","elOption","axisPointerType","otherExtent","pixelValue","elStyle","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","layoutInfo","buildCartesianSingleLabelElOption","getHandleTransform","getTransformedPosition","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","verticalAlign","align","tooltipOption","targetShape","makeLineShape","shadow","makeRectShape","1186","styleModel","getAreaStyle","buildLabelElOption","labelPos","getValueLabel","paddings","confineInContainer","bgColor","shadowColor","viewWidth","viewHeight","seriesDataIndices","axisHelper","seriesData","idxItem","dataParams","textLayout","xDimIndex","xy","wh","makeSectorShape","r0","clockwise","1187","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","SILENT","util","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","setHandlerProxy","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","dispatch","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1188","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","_x","_y","dropTarget","lastDropTarget","_dropTarget","1189","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","clipPaths","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","1190","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","1191","_life","_initialized","onrestart","_pausedTime","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","arg","1192","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1193","parseInt10","isLayerValid","__builtin__","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","cssText","Layer","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","_width","_height","mainLayer","initContext","_domRoot","_getSize","appendChild","_hoverlayer","_hoverElements","isSingleCanvas","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_redrawId","_paintList","clearColor","_backgroundColor","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","save","originalEl","_doPaintEl","restore","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","clearRect","eachBuiltinLayer","virtual","layerList","zi","__startIndex","__drawIndex","useTimer","now","__endIndex","firstEl","notClear","error","prevElClipPaths","draw","currentLayer","forcePaint","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","updatePrevLayer","__used","incrementalLayerCount","getElementCount","_clearLayer","layerConfig","_zlevel","delLayer","removeChild","display","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","1194","returnFalse","createDom","newDom","newDomStyle","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","1195","textHelper","1196","_event","_clips","_running","_time","_pauseStart","clips","_update","deferredEvents","deferredClips","_startLoop","1197","eventNameFix","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","GestureMgr","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","1198","pointPair","eventUtil","_track","_doTrack","_recognize","touches","trackItem","recognizers","pinch","track","pinchEnd","pinchPre","pinchCenter","1199","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","1200","1201","graphicUtil","PATH_COLOR","1202","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","1203","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","windingArc","containPath","isStroke","cubic","quadratic","1204","_l","_a","_b","1205","1206","_curve","1207","1208","nPoint","mathAtan2","1209","1210","1211","fixClipWithShadow","unitX","unitY","1212","orignalBrush","modified","shadowTemp","1213","1214","polyHelper","1215","interpolate","isLoop","v2Distance","segs","w2","w3","1216","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","cp0","v2Add","1217","1218","1219","pointAt","1220","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","tangentAt","1221","1222","paths","_updatePathDirty","1223","globalCoord","1224","1225","IncrementalDisplayble","Displayble","_displayables","_temporaryDisplayables","_cursor","clearDisplaybles","addDisplayable","notPersistent","addDisplayables","displayables","1226","getBorderLineDash","1227","1228","platform","gradientColor","animationDuration","animationDurationUpdate","animationEasingUpdate","animationThreshold","progressiveThreshold","hoverLayerThreshold","useUTC","1229","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1230","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","1231","compatEC2ItemStyle","itemStyleOpt","itemStyle","POSSIBLE_STYLES","normalItemStyleOpt","normal","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","processSeries","markPoint","markLine","markArea","nodes","edgeData","links","edges","mpData","mlData","breadcrumb","levels","leaves","toArr","toObj","axes","axisOpt","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","toolbox","toolboxOpt","feature","featureOpt","1232","stackInfoMap","stackInfoList","stackInfo","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","1233","DIMENSION_LABEL_REG","rawValue","componentSubType","marker","labelProp","itemModel","1234","createOnAllSeries","performRawSeries","colorAccessPath","dataEach","1235","keyValues","getConfig","userConfig","ariaModel","lang","getSeriesTypeName","typeNames","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","title","seriesLabels","seriesCount","seriesLabel","seriesTpl","displayCnt","dataLabels","1236","polygon","lineX","lineY","dataView","dataZoom","zoom","back","magicType","bar","tiled","saveAsImage","pie","scatter","effectScatter","tree","treemap","boxplot","candlestick","heatmap","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","allData","partialData","1237","maskColor","mask","labelRect","1238","dataProcessorHandlers","visualHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","createSeriesStageTask","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","getTargetSeries","pipelineMap","_pipelineMap","createOverallStageTask","createStub","stubReset","stubOnDirty","overallProgress","agent","__block","overallTaskReset","overallReset","upstreamContext","stubProgress","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","__idxInPipeline","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","_component","taskRecord","pCtx","progressiveEnabled","blockIndex","dataLen","threshold","stageTaskMap","cond","1239","colorAll","1240","axisCommon","axisTick","axisLabel","splitLine","splitArea","areaStyle","legend","iconStyle","borderColor","controlStyle","timeAxis","logAxis","categoryAxis","color0","borderColor0","1241","1242","format","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","1243","createList","createScale","mixinAxisModelCommonMethods","_completeDimensions","_createDimensions","1244","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","1245","scaleProto","_ordinalMeta","rank","1246","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","1247","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","err","1248","decode","json","UTF8Encoding","encodeScale","UTF8Scale","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","featureObj","geometries","exterior","interiors","region","Region","cp","1249","polygonContain","MAX_NUMBER","loopGeo","transformTo","1250","1251","makeCategoryLabels","makeRealNumberLabels","makeCategoryTicks","makeCategoryLabelsActually","labelCategoryInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","numericLabelInterval","makeLabelsByCustomizedCategoryInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","ticksCache","optionTickInterval","labelsResult","cache","autoInterval","fetchAutoCategoryIntervalCalculationParams","axisRotate","ordinalScale","ordinalExtent","unitSpan","unitW","unitH","maxW","maxH","dw","dh","lastAutoInterval","lastTickCount","categoryInterval","onlyTick","addItem","tVal","startTick","showMinMax","1252","1253","Cartesian","getAxesByScale","axisX","axisY","reserved","clampData","xScale","yScale","xAxisExtent","yAxisExtent","1254","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","output","1255","coordExtent","1256","containLabel","borderWidth","1257","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","__ordinalMeta","axisDefault","1258","nameRotate","nameTruncate","nameTextStyle","nameGap","symbolSize","inside","logBase","1259","BaseBarSeries","brushSelector","largeThreshold","1260","getMarkerPosition","pt","legendHoverLink","barMinAngle","progressiveChunkMode","1261","removeRect","animationModel","removeSector","updateStyle","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","createLarge","startPoint","valueIdx","LargePath","__startPoint","__valueIdx","setLargeStyle","_helper","barItemStyle","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","_clear","_incrementalRenderLarge","isLargeDraw","isHorizontalOrRadial","oldData","elementCreator","newIndex","oldIndex","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","1262","hoverLabelModel","getDefaultLabel","fixPosition","_labelHelper","1263","labelDims","vals","1264","1265","1266","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitAreaColors","_splitLine","splitLineModel","lineColors","lineCount","colorIndex","_splitArea","splitAreaModel","areaStyleModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","1267","createDataSelectAction","dataColor","pieLayout","dataFilter","1268","createListSimply","dataSelectableMixin","PieSeries","updateSelectedMap","_createSelectableList","_defaultLabelLine","selected","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","hoverAnimation","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","1269","dimensionsInfo","1270","_targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","isSelected","1271","updateDataSelected","hasAnimation","toggleItemSelected","midAngle","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","updateData","piePieceProto","firstCreate","visualColor","lineJoin","_updateLabel","labelText","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","PieView","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","selectedMode","piePiece","newIdx","oldIdx","_createClipPath","itemLayout","1272","actionInfos","1273","paletteScope","seiresModelMap","__paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","1274","RADIAN","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","1275","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelPosition","labelLineLen","labelLineLen2","isLabelInside","1276","legendModels","1277","1278","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","payloadInfo","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","1279","AxisPointerModel","triggerOn","shadowStyle","handle","icon","1280","globalListener","AxisPointerView","1281","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","doClear","buildLabel","1282","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","borderRadius","1283","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","tooltipModel","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","setContent","getSize","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","1284","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","borderName","camelCase","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","isShow","1285","subtext","subtarget","itemGap","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","sublink","open","groupRect","layoutOption","alignStyle","1286","legendFilter","1287","LegendModel","_updateData","legendData","hasSelected","potentialData","availableNames","isPotential","_availableNames","itemWidth","itemHeight","inactiveColor","1288","legendSelectActionHandler","selectedMap","isToggleSelect","legendModel","isItemSelected","1289","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","_listComponent","makeBackground","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","resetInner","itemAlign","renderInner","viewportSize","mainRect","layoutInner","contentGroup","legendDrawnMap","selectMode","legendSymbolType","itemGroup","_createItem","symbolKeepAspect","itemIcon","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","1290","boxLayoutParams","layoutBox","1291","1292"],"mappings":"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","file":"static/js/0.fc4237a2.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 1096:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(1099);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_bar__ = __webpack_require__(1252);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_bar___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_bar__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_chart_pie__ = __webpack_require__(1267);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_chart_pie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_chart_pie__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_tooltip__ = __webpack_require__(1277);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_title__ = __webpack_require__(1285);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_title___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_title__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_legend__ = __webpack_require__(1286);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_legend__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_grid__ = __webpack_require__(1292);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_grid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_grid__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var BarChart=function(_Component){_inherits(BarChart,_Component);function BarChart(props){_classCallCheck(this,BarChart);var _this=_possibleConstructorReturn(this,(BarChart.__proto__||Object.getPrototypeOf(BarChart)).call(this,props));_this.initChart=function(){};_this.initChart=_this.initChart();return _this;}_createClass(BarChart,[{key:'componentDidMount',value:function componentDidMount(){var myChart=__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(this.chartbox);var option=this.props.option;myChart.setOption(option);}},{key:'render',value:function render(){var _this2=this;var _props=this.props,width=_props.width,height=_props.height;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{ref:function ref(chartbox){return _this2.chartbox=chartbox;},style:{width:width,height:height}});}}]);return BarChart;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"default\"] = (BarChart);\n\n/***/ }),\n\n/***/ 1097:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ 1098:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\n\n/***/ }),\n\n/***/ 1099:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(1143);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar colorTool = __webpack_require__(1118);\n\nvar env = __webpack_require__(1104);\n\nvar timsort = __webpack_require__(1132);\n\nvar Eventful = __webpack_require__(1117);\n\nvar GlobalModel = __webpack_require__(1157);\n\nvar ExtensionAPI = __webpack_require__(1164);\n\nvar CoordinateSystemManager = __webpack_require__(1135);\n\nvar OptionManager = __webpack_require__(1229);\n\nvar backwardCompat = __webpack_require__(1230);\n\nvar dataStack = __webpack_require__(1232);\n\nvar ComponentModel = __webpack_require__(1109);\n\nvar SeriesModel = __webpack_require__(1165);\n\nvar ComponentView = __webpack_require__(1166);\n\nvar ChartView = __webpack_require__(1167);\n\nvar graphic = __webpack_require__(1100);\n\nvar modelUtil = __webpack_require__(1098);\n\nvar _throttle = __webpack_require__(1137);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(1234);\n\nvar aria = __webpack_require__(1235);\n\nvar loadingDefault = __webpack_require__(1237);\n\nvar Scheduler = __webpack_require__(1238);\n\nvar lightTheme = __webpack_require__(1239);\n\nvar darkTheme = __webpack_require__(1240);\n\n__webpack_require__(1241);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(1242);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n\n/***/ 1100:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar pathTool = __webpack_require__(1202);\n\nvar colorTool = __webpack_require__(1118);\n\nvar matrix = __webpack_require__(1113);\n\nvar vector = __webpack_require__(1103);\n\nvar Path = __webpack_require__(1105);\n\nvar Transformable = __webpack_require__(1146);\n\nvar ZImage = __webpack_require__(1154);\n\nexports.Image = ZImage;\n\nvar Group = __webpack_require__(1122);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(1209);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(1210);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(1211);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(1213);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(1214);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(1217);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(1218);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(1219);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(1220);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(1221);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(1222);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(1223);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(1224);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(1106);\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = __webpack_require__(1225);\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 1101:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(82)))\n\n/***/ }),\n\n/***/ 1102:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 1103:\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ 1104:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1105:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1124);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar PathProxy = __webpack_require__(1126);\n\nvar pathContain = __webpack_require__(1203);\n\nvar Pattern = __webpack_require__(1152);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1106:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1103);\n\nvar matrix = __webpack_require__(1113);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1107:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar textContain = __webpack_require__(1112);\n\nvar numberUtil = __webpack_require__(1102);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 1108:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar env = __webpack_require__(1104);\n\nvar _model = __webpack_require__(1098);\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = __webpack_require__(1111);\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = __webpack_require__(1199);\n\nvar areaStyleMixin = __webpack_require__(1200);\n\nvar textStyleMixin = __webpack_require__(1201);\n\nvar itemStyleMixin = __webpack_require__(1226);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Model = __webpack_require__(1108);\n\nvar componentUtil = __webpack_require__(1127);\n\nvar _clazz = __webpack_require__(1111);\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = __webpack_require__(1098);\n\nvar makeInner = _model.makeInner;\n\nvar layout = __webpack_require__(1110);\n\nvar boxLayoutMixin = __webpack_require__(1227);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1110:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar BoundingRect = __webpack_require__(1106);\n\nvar _number = __webpack_require__(1102);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(1107);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 1111:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 1112:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1106);\n\nvar imageHelper = __webpack_require__(1133);\n\nvar _util = __webpack_require__(1097);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 1113:\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;\n\n/***/ }),\n\n/***/ 1114:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1103);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n\n/***/ 1115:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(1097);\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = __webpack_require__(1098);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = __webpack_require__(1102);\n\nvar parseDate = _number.parseDate;\n\nvar Source = __webpack_require__(1120);\n\nvar _sourceType = __webpack_require__(1121);\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;\n\n/***/ }),\n\n/***/ 1116:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1097);\n\nvar OrdinalScale = __webpack_require__(1245);\n\nvar IntervalScale = __webpack_require__(1141);\n\nvar Scale = __webpack_require__(1130);\n\nvar numberUtil = __webpack_require__(1102);\n\nvar _barGrid = __webpack_require__(1173);\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = __webpack_require__(1106);\n\n__webpack_require__(1246);\n\n__webpack_require__(1247);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;\n\n/***/ }),\n\n/***/ 1117:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1118:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1148);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ 1119:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(1117);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(1104);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 1120:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = __webpack_require__(1111);\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = __webpack_require__(1121);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1121:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;\n\n/***/ }),\n\n/***/ 1122:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Element = __webpack_require__(1145);\n\nvar BoundingRect = __webpack_require__(1106);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1123:\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 1124:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Style = __webpack_require__(1150);\n\nvar Element = __webpack_require__(1145);\n\nvar RectText = __webpack_require__(1195);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1125:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1126:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(1114);\n\nvar vec2 = __webpack_require__(1103);\n\nvar bbox = __webpack_require__(1158);\n\nvar BoundingRect = __webpack_require__(1106);\n\nvar _config = __webpack_require__(1123);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1127:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar _clazz = __webpack_require__(1111);\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 1128:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = __webpack_require__(1098);\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = __webpack_require__(1163);\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = __webpack_require__(1097);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = __webpack_require__(1120);\n\nvar _sourceType = __webpack_require__(1121);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;\n\n/***/ }),\n\n/***/ 1129:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;\n\n/***/ }),\n\n/***/ 1130:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(1111);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1131:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Model = __webpack_require__(1108);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 1132:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ 1133:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1148);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n\n/***/ 1138:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Model = __webpack_require__(1108);\n\nvar DataDiffer = __webpack_require__(1244);\n\nvar Source = __webpack_require__(1120);\n\nvar _dataProvider = __webpack_require__(1115);\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = __webpack_require__(1139);\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1139:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar completeDimensions = __webpack_require__(1170);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(1102);\n\nvar formatUtil = __webpack_require__(1107);\n\nvar Scale = __webpack_require__(1130);\n\nvar helper = __webpack_require__(1172);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar graphic = __webpack_require__(1100);\n\nvar BoundingRect = __webpack_require__(1106);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 1143:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1144);\n\nvar env = __webpack_require__(1104);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Handler = __webpack_require__(1187);\n\nvar Storage = __webpack_require__(1189);\n\nvar Painter = __webpack_require__(1193);\n\nvar Animation = __webpack_require__(1196);\n\nvar HandlerProxy = __webpack_require__(1197);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 1144:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1145:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1144);\n\nvar Eventful = __webpack_require__(1117);\n\nvar Transformable = __webpack_require__(1146);\n\nvar Animatable = __webpack_require__(1190);\n\nvar zrUtil = __webpack_require__(1097);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1146:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(1113);\n\nvar vector = __webpack_require__(1103);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1147:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(1191);\n\nvar color = __webpack_require__(1118);\n\nvar _util = __webpack_require__(1097);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1148:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1149:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1123);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1150:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar fixShadow = __webpack_require__(1151);\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1151:\n/***/ (function(module, exports) {\n\nvar SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1152:\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1153:\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1154:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1124);\n\nvar BoundingRect = __webpack_require__(1106);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar imageHelper = __webpack_require__(1133);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1155:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(1112);\n\nvar roundRectHelper = __webpack_require__(1156);\n\nvar imageHelper = __webpack_require__(1133);\n\nvar fixShadow = __webpack_require__(1151);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 1156:\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1157:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(1097);\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = __webpack_require__(1098);\n\nvar Model = __webpack_require__(1108);\n\nvar ComponentModel = __webpack_require__(1109);\n\nvar globalDefault = __webpack_require__(1228);\n\nvar colorPaletteMixin = __webpack_require__(1162);\n\nvar _sourceHelper = __webpack_require__(1128);\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1158:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1103);\n\nvar curve = __webpack_require__(1114);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 1159:\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 1160:\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 1161:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(1215);\n\nvar smoothBezier = __webpack_require__(1216);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1162:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(1098);\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1163:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(1097);\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;\n\n/***/ }),\n\n/***/ 1164:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1165:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1097);\n\nvar env = __webpack_require__(1104);\n\nvar _format = __webpack_require__(1107);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = __webpack_require__(1098);\n\nvar ComponentModel = __webpack_require__(1109);\n\nvar colorPaletteMixin = __webpack_require__(1162);\n\nvar dataFormatMixin = __webpack_require__(1233);\n\nvar _layout = __webpack_require__(1110);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = __webpack_require__(1136);\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = __webpack_require__(1128);\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = __webpack_require__(1115);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1166:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(1122);\n\nvar componentUtil = __webpack_require__(1127);\n\nvar clazzUtil = __webpack_require__(1111);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1167:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar each = _util.each;\n\nvar Group = __webpack_require__(1122);\n\nvar componentUtil = __webpack_require__(1127);\n\nvar clazzUtil = __webpack_require__(1111);\n\nvar modelUtil = __webpack_require__(1098);\n\nvar _task = __webpack_require__(1136);\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = __webpack_require__(1168);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1168:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(1098);\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1169:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar List = __webpack_require__(1138);\n\nvar createDimensions = __webpack_require__(1140);\n\nvar _sourceType = __webpack_require__(1121);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = __webpack_require__(1139);\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = __webpack_require__(1098);\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = __webpack_require__(1135);\n\nvar _referHelper = __webpack_require__(1163);\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = __webpack_require__(1120);\n\nvar _dataStackHelper = __webpack_require__(1129);\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1170:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = __webpack_require__(1098);\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = __webpack_require__(1128);\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = __webpack_require__(1120);\n\nvar _dimensionHelper = __webpack_require__(1139);\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1171:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1172:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(1102);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 1173:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar _number = __webpack_require__(1102);\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = __webpack_require__(1129);\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = __webpack_require__(1168);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;\n\n/***/ }),\n\n/***/ 1174:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar axisHelper = __webpack_require__(1116);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1175:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = __webpack_require__(1102);\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = __webpack_require__(1251);\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1176:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(1097);\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = __webpack_require__(1110);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = __webpack_require__(1116);\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = __webpack_require__(1253);\n\nvar Axis2D = __webpack_require__(1255);\n\nvar CoordinateSystem = __webpack_require__(1135);\n\nvar _dataStackHelper = __webpack_require__(1129);\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\n__webpack_require__(1256);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1177:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar ComponentModel = __webpack_require__(1109);\n\nvar axisModelCreator = __webpack_require__(1257);\n\nvar axisModelCommonMixin = __webpack_require__(1174);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1178:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar graphic = __webpack_require__(1100);\n\n__webpack_require__(1176);\n\n__webpack_require__(1265);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n\n/***/ 1179:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(1107);\n\nvar graphic = __webpack_require__(1100);\n\nvar Model = __webpack_require__(1108);\n\nvar _number = __webpack_require__(1102);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(1142);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(1113);\n\nvar _vector = __webpack_require__(1103);\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1180:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1099);\n\nvar axisPointerModelHelper = __webpack_require__(1131);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1181:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 1182:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar axisPointerModelHelper = __webpack_require__(1131);\n\nvar axisTrigger = __webpack_require__(1278);\n\n__webpack_require__(1279);\n\n__webpack_require__(1280);\n\n__webpack_require__(1185);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 1183:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar modelUtil = __webpack_require__(1098);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1184:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar env = __webpack_require__(1104);\n\nvar _model = __webpack_require__(1098);\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 1185:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(1100);\n\nvar BaseAxisPointer = __webpack_require__(1281);\n\nvar viewHelper = __webpack_require__(1186);\n\nvar cartesianAxisHelper = __webpack_require__(1181);\n\nvar AxisView = __webpack_require__(1180);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1186:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar graphic = __webpack_require__(1100);\n\nvar textContain = __webpack_require__(1112);\n\nvar formatUtil = __webpack_require__(1107);\n\nvar matrix = __webpack_require__(1113);\n\nvar axisHelper = __webpack_require__(1116);\n\nvar AxisBuilder = __webpack_require__(1179);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 1187:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1097);\n\nvar vec2 = __webpack_require__(1103);\n\nvar Draggable = __webpack_require__(1188);\n\nvar Eventful = __webpack_require__(1117);\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1188:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1189:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1097);\n\nvar env = __webpack_require__(1104);\n\nvar Group = __webpack_require__(1122);\n\nvar timsort = __webpack_require__(1132);\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1190:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(1147);\n\nvar log = __webpack_require__(1149);\n\nvar _util = __webpack_require__(1097);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1191:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(1192);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1192:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1193:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1123);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(1097);\n\nvar log = __webpack_require__(1149);\n\nvar BoundingRect = __webpack_require__(1106);\n\nvar timsort = __webpack_require__(1132);\n\nvar Layer = __webpack_require__(1194);\n\nvar requestAnimationFrame = __webpack_require__(1153);\n\nvar Image = __webpack_require__(1154);\n\nvar env = __webpack_require__(1104);\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1194:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1097);\n\nvar _config = __webpack_require__(1123);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(1150);\n\nvar Pattern = __webpack_require__(1152);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1195:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(1155);\n\nvar BoundingRect = __webpack_require__(1106);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1196:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1097);\n\nvar _event = __webpack_require__(1119);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(1153);\n\nvar Animator = __webpack_require__(1147);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1197:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(1119);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Eventful = __webpack_require__(1117);\n\nvar env = __webpack_require__(1104);\n\nvar GestureMgr = __webpack_require__(1198);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1198:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(1119);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1199:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1125);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1200:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1125);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1201:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(1112);\n\nvar graphicUtil = __webpack_require__(1100);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1202:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\nvar PathProxy = __webpack_require__(1126);\n\nvar transformPath = __webpack_require__(1208);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1203:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1126);\n\nvar line = __webpack_require__(1204);\n\nvar cubic = __webpack_require__(1205);\n\nvar quadratic = __webpack_require__(1206);\n\nvar arc = __webpack_require__(1207);\n\nvar _util = __webpack_require__(1159);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(1114);\n\nvar windingLine = __webpack_require__(1160);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1204:\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1205:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(1114);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1206:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(1114);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1207:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1159);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1208:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1126);\n\nvar _vector = __webpack_require__(1103);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1209:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1124);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar textContain = __webpack_require__(1112);\n\nvar textHelper = __webpack_require__(1155);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1210:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1211:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\nvar fixClipWithShadow = __webpack_require__(1212);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1212:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(1104);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1213:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1214:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\nvar polyHelper = __webpack_require__(1161);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1215:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1103);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1216:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1103);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1217:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\nvar polyHelper = __webpack_require__(1161);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1218:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\nvar roundRectHelper = __webpack_require__(1156);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1219:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1220:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\nvar vec2 = __webpack_require__(1103);\n\nvar _curve = __webpack_require__(1114);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1221:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1222:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1105);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1223:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Gradient = __webpack_require__(1134);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1224:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Gradient = __webpack_require__(1134);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1225:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar inherits = _util.inherits;\n\nvar Displayble = __webpack_require__(1124);\n\nvar BoundingRect = __webpack_require__(1106);\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1226:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1125);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1227:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1228:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1229:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar modelUtil = __webpack_require__(1098);\n\nvar ComponentModel = __webpack_require__(1109);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1230:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(1231);\n\nvar _model = __webpack_require__(1098);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1231:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar modelUtil = __webpack_require__(1098);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1232:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1233:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(1115);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = __webpack_require__(1107);\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1234:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(1134);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1235:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar lang = __webpack_require__(1236);\n\nvar _dataProvider = __webpack_require__(1115);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1236:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1237:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar graphic = __webpack_require__(1100);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1238:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = __webpack_require__(1136);\n\nvar createTask = _task.createTask;\n\nvar _component = __webpack_require__(1127);\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = __webpack_require__(1157);\n\nvar ExtensionAPI = __webpack_require__(1164);\n\nvar _model = __webpack_require__(1098);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1239:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1240:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1241:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentModel = __webpack_require__(1109);\n\nvar ComponentView = __webpack_require__(1166);\n\nvar _sourceHelper = __webpack_require__(1128);\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = __webpack_require__(1121);\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});\n\n/***/ }),\n\n/***/ 1242:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(1143);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(1113);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(1103);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(1097);\n\nvar colorTool = __webpack_require__(1118);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(1100);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(1102);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(1107);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(1137);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(1243);\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = __webpack_require__(1248);\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = __webpack_require__(1138);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(1108);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(1175);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(1104);\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\n\n/***/ }),\n\n/***/ 1243:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar createListFromArray = __webpack_require__(1169);\n\nvar axisHelper = __webpack_require__(1116);\n\nvar axisModelCommonMixin = __webpack_require__(1174);\n\nvar Model = __webpack_require__(1108);\n\nvar _layout = __webpack_require__(1110);\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = __webpack_require__(1129);\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = __webpack_require__(1170);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = __webpack_require__(1140);\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = __webpack_require__(1142);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 1244:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1245:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Scale = __webpack_require__(1130);\n\nvar OrdinalMeta = __webpack_require__(1171);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1246:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar numberUtil = __webpack_require__(1102);\n\nvar formatUtil = __webpack_require__(1107);\n\nvar scaleHelper = __webpack_require__(1172);\n\nvar IntervalScale = __webpack_require__(1141);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1247:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Scale = __webpack_require__(1130);\n\nvar numberUtil = __webpack_require__(1102);\n\nvar IntervalScale = __webpack_require__(1141);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1248:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Region = __webpack_require__(1249);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1249:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1106);\n\nvar bbox = __webpack_require__(1158);\n\nvar vec2 = __webpack_require__(1103);\n\nvar polygonContain = __webpack_require__(1250);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1250:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(1160);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n\n/***/ 1251:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar textContain = __webpack_require__(1112);\n\nvar _model = __webpack_require__(1098);\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = __webpack_require__(1116);\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;\n\n/***/ }),\n\n/***/ 1252:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar _barGrid = __webpack_require__(1173);\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\n__webpack_require__(1176);\n\n__webpack_require__(1259);\n\n__webpack_require__(1261);\n\n__webpack_require__(1178);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});\n\n/***/ }),\n\n/***/ 1253:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Cartesian = __webpack_require__(1254);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1254:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1255:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Axis = __webpack_require__(1175);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1256:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1177);\n\nvar ComponentModel = __webpack_require__(1109);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1257:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar axisDefault = __webpack_require__(1258);\n\nvar ComponentModel = __webpack_require__(1109);\n\nvar _layout = __webpack_require__(1110);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = __webpack_require__(1171);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1258:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1259:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(1260);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1260:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(1165);\n\nvar createListFromArray = __webpack_require__(1169);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1261:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1099);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar graphic = __webpack_require__(1100);\n\nvar _helper = __webpack_require__(1262);\n\nvar setLabel = _helper.setLabel;\n\nvar Model = __webpack_require__(1108);\n\nvar barItemStyle = __webpack_require__(1264);\n\nvar Path = __webpack_require__(1105);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1262:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(1100);\n\nvar _labelHelper = __webpack_require__(1263);\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n/***/ }),\n\n/***/ 1263:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(1115);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n/***/ }),\n\n/***/ 1264:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1125);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1265:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1177);\n\n__webpack_require__(1266);\n\n/***/ }),\n\n/***/ 1266:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar graphic = __webpack_require__(1100);\n\nvar AxisBuilder = __webpack_require__(1179);\n\nvar AxisView = __webpack_require__(1180);\n\nvar cartesianAxisHelper = __webpack_require__(1181);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n\n/***/ 1267:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar zrUtil = __webpack_require__(1097);\n\n__webpack_require__(1268);\n\n__webpack_require__(1271);\n\nvar createDataSelectAction = __webpack_require__(1272);\n\nvar dataColor = __webpack_require__(1273);\n\nvar pieLayout = __webpack_require__(1274);\n\nvar dataFilter = __webpack_require__(1276);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n/***/ }),\n\n/***/ 1268:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar createListSimply = __webpack_require__(1269);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar modelUtil = __webpack_require__(1098);\n\nvar _number = __webpack_require__(1102);\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = __webpack_require__(1270);\n\nvar _dataProvider = __webpack_require__(1115);\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1269:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createDimensions = __webpack_require__(1140);\n\nvar List = __webpack_require__(1138);\n\nvar _util = __webpack_require__(1097);\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1270:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1271:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar graphic = __webpack_require__(1100);\n\nvar ChartView = __webpack_require__(1167);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1272:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1273:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1097);\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1274:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(1102);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(1275);\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1275:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(1112);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1276:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1277:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\n__webpack_require__(1182);\n\n__webpack_require__(1282);\n\n__webpack_require__(1283);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 1278:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar _model = __webpack_require__(1098);\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = __webpack_require__(1131);\n\nvar findPointFromSeries = __webpack_require__(1183);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1279:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1280:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar globalListener = __webpack_require__(1184);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1281:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar clazzUtil = __webpack_require__(1111);\n\nvar graphic = __webpack_require__(1100);\n\nvar axisPointerModelHelper = __webpack_require__(1131);\n\nvar eventTool = __webpack_require__(1119);\n\nvar throttleUtil = __webpack_require__(1137);\n\nvar _model = __webpack_require__(1098);\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1282:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1283:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar env = __webpack_require__(1104);\n\nvar TooltipContent = __webpack_require__(1284);\n\nvar formatUtil = __webpack_require__(1107);\n\nvar numberUtil = __webpack_require__(1102);\n\nvar graphic = __webpack_require__(1100);\n\nvar findPointFromSeries = __webpack_require__(1183);\n\nvar layoutUtil = __webpack_require__(1110);\n\nvar Model = __webpack_require__(1108);\n\nvar globalListener = __webpack_require__(1184);\n\nvar axisHelper = __webpack_require__(1116);\n\nvar axisPointerViewHelper = __webpack_require__(1186);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1284:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1097);\n\nvar zrColor = __webpack_require__(1118);\n\nvar eventUtil = __webpack_require__(1119);\n\nvar env = __webpack_require__(1104);\n\nvar formatUtil = __webpack_require__(1107);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1285:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar graphic = __webpack_require__(1100);\n\nvar _layout = __webpack_require__(1110);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n\n/***/ 1286:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\n__webpack_require__(1287);\n\n__webpack_require__(1288);\n\n__webpack_require__(1289);\n\nvar legendFilter = __webpack_require__(1291);\n\nvar Component = __webpack_require__(1109);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1287:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar Model = __webpack_require__(1108);\n\nvar _model = __webpack_require__(1098);\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1288:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1099);\n\nvar zrUtil = __webpack_require__(1097);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1289:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1101);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1099);\n\nvar zrUtil = __webpack_require__(1097);\n\nvar _symbol = __webpack_require__(1142);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(1100);\n\nvar _listComponent = __webpack_require__(1290);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(1110);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1290:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(1110);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(1107);\n\nvar graphic = __webpack_require__(1100);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n\n/***/ 1291:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1292:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1178);\n\n__webpack_require__(1185);\n\n__webpack_require__(1182);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.fc4237a2.chunk.js","import React, { Component } from 'react';\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/grid';\n\nexport default class BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.initChart = this.initChart();\n  }\n  componentDidMount() {\n    const myChart = echarts.init(this.chartbox);\n    const { option } = this.props;\n    myChart.setOption(option);\n  }\n  initChart = () => {\n\n  }\n  render() {\n    const { width, height } = this.props;\n    return (\n      <div \n        ref={chartbox => (this.chartbox = chartbox)}\n        style={{ width, height }}\n      ></div>\n    );\n  } \n}\n\n\n// WEBPACK FOOTER //\n// ./src/modules/page.echarts.manage/components/BarChart.js","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/util.js\n// module id = 1097\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/model.js\n// module id = 1098\n// module chunks = 0","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/echarts.js\n// module id = 1099\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/graphic.js\n// module id = 1100\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/config.js\n// module id = 1101\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/number.js\n// module id = 1102\n// module chunks = 0","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/vector.js\n// module id = 1103\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/env.js\n// module id = 1104\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Path.js\n// module id = 1105\n// module chunks = 0","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/BoundingRect.js\n// module id = 1106\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/format.js\n// module id = 1107\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Model.js\n// module id = 1108\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Component.js\n// module id = 1109\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/layout.js\n// module id = 1110\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/clazz.js\n// module id = 1111\n// module chunks = 0","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/text.js\n// module id = 1112\n// module chunks = 0","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/matrix.js\n// module id = 1113\n// module chunks = 0","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/curve.js\n// module id = 1114\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/dataProvider.js\n// module id = 1115\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisHelper.js\n// module id = 1116\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Eventful.js\n// module id = 1117\n// module chunks = 0","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/color.js\n// module id = 1118\n// module chunks = 0","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/event.js\n// module id = 1119\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/Source.js\n// module id = 1120\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/sourceType.js\n// module id = 1121\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/container/Group.js\n// module id = 1122\n// module chunks = 0","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/config.js\n// module id = 1123\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Displayable.js\n// module id = 1124\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1125\n// module chunks = 0","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/PathProxy.js\n// module id = 1126\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/component.js\n// module id = 1127\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/sourceHelper.js\n// module id = 1128\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/dataStackHelper.js\n// module id = 1129\n// module chunks = 0","var clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Scale.js\n// module id = 1130\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1131\n// module chunks = 0","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/timsort.js\n// module id = 1132\n// module chunks = 0","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/image.js\n// module id = 1133\n// module chunks = 0","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Gradient.js\n// module id = 1134\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/CoordinateSystem.js\n// module id = 1135\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/stream/task.js\n// module id = 1136\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/throttle.js\n// module id = 1137\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/List.js\n// module id = 1138\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/dimensionHelper.js\n// module id = 1139\n// module chunks = 0","var completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/createDimensions.js\n// module id = 1140\n// module chunks = 0","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Interval.js\n// module id = 1141\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/symbol.js\n// module id = 1142\n// module chunks = 0","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/zrender.js\n// module id = 1143\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/guid.js\n// module id = 1144\n// module chunks = 0","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Element.js\n// module id = 1145\n// module chunks = 0","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Transformable.js\n// module id = 1146\n// module chunks = 0","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animator.js\n// module id = 1147\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/LRU.js\n// module id = 1148\n// module chunks = 0","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/log.js\n// module id = 1149\n// module chunks = 0","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Style.js\n// module id = 1150\n// module chunks = 0","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixShadow.js\n// module id = 1151\n// module chunks = 0","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Pattern.js\n// module id = 1152\n// module chunks = 0","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1153\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Image.js\n// module id = 1154\n// module chunks = 0","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/text.js\n// module id = 1155\n// module chunks = 0","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/roundRect.js\n// module id = 1156\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Global.js\n// module id = 1157\n// module chunks = 0","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/bbox.js\n// module id = 1158\n// module chunks = 0","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/util.js\n// module id = 1159\n// module chunks = 0","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/windingLine.js\n// module id = 1160\n// module chunks = 0","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/poly.js\n// module id = 1161\n// module chunks = 0","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/colorPalette.js\n// module id = 1162\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/referHelper.js\n// module id = 1163\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/ExtensionAPI.js\n// module id = 1164\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Series.js\n// module id = 1165\n// module chunks = 0","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Component.js\n// module id = 1166\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Chart.js\n// module id = 1167\n// module chunks = 0","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createRenderPlanner.js\n// module id = 1168\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1169\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/completeDimensions.js\n// module id = 1170\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/OrdinalMeta.js\n// module id = 1171\n// module chunks = 0","var numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/helper.js\n// module id = 1172\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/barGrid.js\n// module id = 1173\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1174\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/Axis.js\n// module id = 1175\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Grid.js\n// module id = 1176\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 1177\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/gridSimple.js\n// module id = 1178\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1179\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 1180\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js\n// module id = 1181\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 1182\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1183\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1184\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1185\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1186\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Handler.js\n// module id = 1187\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Draggable.js\n// module id = 1188\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Storage.js\n// module id = 1189\n// module chunks = 0","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Animatable.js\n// module id = 1190\n// module chunks = 0","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Clip.js\n// module id = 1191\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/easing.js\n// module id = 1192\n// module chunks = 0","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Painter.js\n// module id = 1193\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Layer.js\n// module id = 1194\n// module chunks = 0","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/mixin/RectText.js\n// module id = 1195\n// module chunks = 0","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animation.js\n// module id = 1196\n// module chunks = 0","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/dom/HandlerProxy.js\n// module id = 1197\n// module chunks = 0","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/GestureMgr.js\n// module id = 1198\n// module chunks = 0","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/lineStyle.js\n// module id = 1199\n// module chunks = 0","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/areaStyle.js\n// module id = 1200\n// module chunks = 0","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/textStyle.js\n// module id = 1201\n// module chunks = 0","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/path.js\n// module id = 1202\n// module chunks = 0","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/path.js\n// module id = 1203\n// module chunks = 0","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/line.js\n// module id = 1204\n// module chunks = 0","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/cubic.js\n// module id = 1205\n// module chunks = 0","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/quadratic.js\n// module id = 1206\n// module chunks = 0","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/arc.js\n// module id = 1207\n// module chunks = 0","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/transformPath.js\n// module id = 1208\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Text.js\n// module id = 1209\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Circle.js\n// module id = 1210\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Sector.js\n// module id = 1211\n// module chunks = 0","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1212\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Ring.js\n// module id = 1213\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polygon.js\n// module id = 1214\n// module chunks = 0","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1215\n// module chunks = 0","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1216\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polyline.js\n// module id = 1217\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Rect.js\n// module id = 1218\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Line.js\n// module id = 1219\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1220\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Arc.js\n// module id = 1221\n// module chunks = 0","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/CompoundPath.js\n// module id = 1222\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/LinearGradient.js\n// module id = 1223\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/RadialGradient.js\n// module id = 1224\n// module chunks = 0","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/IncrementalDisplayable.js\n// module id = 1225\n// module chunks = 0","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/itemStyle.js\n// module id = 1226\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/boxLayout.js\n// module id = 1227\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/globalDefault.js\n// module id = 1228\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/OptionManager.js\n// module id = 1229\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1230\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1231\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataStack.js\n// module id = 1232\n// module chunks = 0","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/dataFormat.js\n// module id = 1233\n// module chunks = 0","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/seriesColor.js\n// module id = 1234\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/aria.js\n// module id = 1235\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/lang.js\n// module id = 1236\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/loading/default.js\n// module id = 1237\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/stream/Scheduler.js\n// module id = 1238\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/theme/light.js\n// module id = 1239\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/theme/dark.js\n// module id = 1240\n// module chunks = 0","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataset.js\n// module id = 1241\n// module chunks = 0","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/export.js\n// module id = 1242\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/helper.js\n// module id = 1243\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/DataDiffer.js\n// module id = 1244\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Ordinal.js\n// module id = 1245\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Time.js\n// module id = 1246\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Log.js\n// module id = 1247\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 1248\n// module chunks = 0","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Region.js\n// module id = 1249\n// module chunks = 0","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/polygon.js\n// module id = 1250\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisTickLabelBuilder.js\n// module id = 1251\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar.js\n// module id = 1252\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 1253\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 1254\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 1255\n// module chunks = 0","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/GridModel.js\n// module id = 1256\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCreator.js\n// module id = 1257\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisDefault.js\n// module id = 1258\n// module chunks = 0","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BarSeries.js\n// module id = 1259\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 1260\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BarView.js\n// module id = 1261\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/helper.js\n// module id = 1262\n// module chunks = 0","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/labelHelper.js\n// module id = 1263\n// module chunks = 0","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/barItemStyle.js\n// module id = 1264\n// module chunks = 0","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis.js\n// module id = 1265\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 1266\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = 1267\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = 1268\n// module chunks = 0","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListSimply.js\n// module id = 1269\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = 1270\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 1271\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = 1272\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = 1273\n// module chunks = 0","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 1274\n// module chunks = 0","var textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = 1275\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = 1276\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 1277\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1278\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1279\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1280\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1281\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1282\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1283\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1284\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/title.js\n// module id = 1285\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1286\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1287\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1288\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1289\n// module chunks = 0","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 1290\n// module chunks = 0","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1291\n// module chunks = 0","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/grid.js\n// module id = 1292\n// module chunks = 0"],"sourceRoot":""}